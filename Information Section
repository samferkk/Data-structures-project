Brian Buchanan
W Jacob Reilley
Samuel Ferkler
Prof. Ghunaim
CS 232 Fall 2018

                  Boojam's Wild Adventure

Table of Contents:
Introduction: explain the premis of the game in detail.
Responsibility sheet: Who was responsible for what and when.
Explaintion sheet: why we did what we did
Conclusion: Wrap up the project. give insight to what was difficult, where short coming where, an how everything fared.

Project projection: Boojam has been sent out on a last minute run to get Christmas presents. Its now a mad dash through the mall to get
everything in time for Christmas.


Introduction: The premis of this game was to have a scavenger hunt for the user to play. The user will be required to navigate thorugh a
mall to collect items that are required by the christmas list. Thing is the user is only able to know one item at a time and the location 
of the item is not given. Another fun twist is that there is not a map of the mall and the user is blind to the stores until they explore
them. So the trick to this game is to explore the mall and figure out what stores exist and which items they have and then return to
them as items are revealed form the list.

Responsibility Sheet:
Jake:
  - Get code from previously built game.
  - Strip code and implement rooms into the code
  - Code Commands for the game
  - add player inventory linked list bag
  - add shopping list as linked list stack

Sam:
  - Write Stroy Board for game being built.
  - Room Creation - 13 Rooms
  - Coding the items into the game

Brain:
  - Create Project design
  - Create Uml Document
  - Coding the Rooms into the game
  - Code the three Exceptions.
  - Clean up look of game so everything reads right.

Explanation Sheet: There is a couple things that were done specifically to cover different requirements from data structures. Like the
Christmas list displays only one item at a time because it is contained as a stack, but it adds an element of mystery to the game as the
user doesn't know what the next item is or how many itmes there are. The Inventory was changed to a bag to implement the bag, which
seemed fitting that when running around the mall the player would have a bag of stuff. The exceptions were created to add comedy to
the game as we wanted there to be certain actions that the user took that had more of a consequence than simply ending the game, 
or having the entire thing crash.

Conclusion: So this project was an interesting one. There was some difficulty in the looseness of the requirements yet it was still
enjoyable. Some of the issues faced where trying make code line up when converting the previously existing game code with new data
structures. Over all time management could have been worked out a touch better but everything seemed to run pretty smoothly over all. The buy
mechanic did have to be scrapped however. All in all the game works well and the code functions without issues, so a success.
